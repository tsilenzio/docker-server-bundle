version: "3.7"

services:
  traefik:
    image: traefik:1.7.9-alpine
    container_name: traefik
    command:
      - "--docker"
      - "--docker.domain=${DOCKER_URL}"
    env_file:
     - .env
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/traefik.toml
      - ./acme.json:/acme.json
    labels:
      - "traefik.backend=traefik"
      - "traefik.docker.network=traefik"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:${ADMIN_URL}"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.frontend.auth.basic=${ADMIN_USERNAME}:${ADMIN_PASSWORD}"
    networks:
      - traefik
      - drone

  drone:
    image: drone/drone:1.0.0
    container_name: drone
    env_file:
      - .env
    restart: always
    expose:
      - "80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/drone:/data
    labels:
      - "traefik.enable=true"
      - "traefik.backend=drone"
      - "traefik.docker.network=traefik"
      - "traefik.port=80"
      - "traefik.frontend.entryPoints=http,https"
      - "traefik.frontend.rule=Host:${DRONE_SERVER_HOST}"
    networks:
      - drone
    depends_on:
      - traefik

  postgres:
    image: postgres:11.1-alpine
    container_name: postgres
    env_file:
      - .env
    restart: always
    expose:
      - "5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - postgres

networks:
  traefik:
    external: true
    name: traefik
  drone:
    external: false
    name: drone
  postgres:
    external: false
    name: postgres
